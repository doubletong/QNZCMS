@model QNZ.Data.Log
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery;
@{
    ViewData["Title"] = "日志详情";
    Layout = null;
    var antiforgeryRequestToken = antiforgery.GetAndStoreTokens(Context).RequestToken;
}
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link href="/admin/fonts/iconfont.css" rel="stylesheet" />
    <style>
            body{
                padding: 2rem;
            }
            table th{
            white-space: nowrap;
            }
            .pagination{
            margin-bottom: 0;
            }
        </style>
</head>
<body>
<div class="card">
        <header class="card-header">
            <div class="row">
                <div class="col">
                    <div class="card-title-v1"><i class="iconfont icon-barcode"></i>@Model.Id</div>
                </div>
                <div class="col-auto">
                    <a class="btn btn-default-outline" asp-action="Index"><i class="iconfont icon-left-circle"></i></a>
                </div>
            </div>
        </header>
        <div class="card-body">
                <h3>错误说明</h3>
                <div class="container-fluid">
                    @Model.Exception
                </div>
                <h3>消息</h3>
                <div class="container-fluid">
                    @Model.Message
                </div>
                <h3>消息模版</h3>
                <div class="container-fluid">
                    @Model.MessageTemplate
                </div>
                <h3>日志事件</h3>
                <div class="container-fluid">
                    @Model.LogEvent
                </div>
        </div>
        <div class="card-footer">
            @Model.TimeStamp  by @Model.UserName
        </div>
    </div>


    <script>
        let select = document.getElementById("PageSize");
        select.addEventListener("change", (e) => {
         
            var pageSize = select.value;
            var url = "@Url.Action("PageSizeSet")" + "?pageSize=" + pageSize;
           // var data = {pageSize: pageSize};
            fetch(url, {
               method: 'POST', // or 'PUT'
            //   body: JSON.stringify(data), // data can be `string` or {object}!
               headers:{
                 'Content-Type': 'application/json'
               }
            }).then(res => res.json())
            .then(response => location.reload())
            .catch(error => console.error('Error:', error));
        });       
       
    </script>

</body>
</html>