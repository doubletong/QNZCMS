@model LogListVM
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery;
@{
    ViewData["Title"] = "页面";

    var antiforgeryRequestToken = antiforgery.GetAndStoreTokens(Context).RequestToken;
}

    <div class="card">
        <header class="card-header">
            <div class="row">
                <div class="col">
                    <div class="card-title-v1"><i class="iconfont icon-barcode"></i>日志查看</div>
                </div>
                <div class="col-auto">
                    <div class="control"><a class="expand" href="#"><i class="iconfont icon-fullscreen"></i></a><a class="compress" href="#" style="display: none;"><i class="iconfont icon-shrink"></i></a></div>
                </div>
            </div>
        </header>
        <div class="card-body">
            <div class="card-toolbar mb-3">
                <div class="row">
                    <div class="col-auto mr-auto">
                        <form asp-action="Index" method="get" class="form-inline">
                            <label class="sr-only" for="Keyword">关键字</label>
                            @Html.EditorFor(model => model.Keyword, new { htmlAttributes = new { @class = "form-control mb-2 mr-sm-2 mb-sm-0", placeholder = "关键字" } })

                            <button type="submit" class="btn btn-primary"><span class="iconfont icon-search"></span> 搜索</button>
                        </form>
                    </div>
                    <div class="col-auto">
                        <button type="button" id="btnDeleteAll" class="btn btn-primary"><i class="iconfont icon-delete"></i> 清空日志</button>
                    </div>
                </div>
            </div>
                <div class="table-responsive">
                    <table class="table table-hover table-striped table-vmiddle">
                        <thead class="thead-primary">
                            <tr>
                                <th style="width:30px;">
                                    <input type="checkbox" id="allSelect" />
                                </th>
                                <th>
                                    消息
                                </th>
                                <th>
                                    <a asp-action="Index" asp-route-keyword="@Model.Keyword" asp-route-sort="@((Model.OrderBy=="date" && Model.Sort=="asc")?"desc":"asc")" asp-route-orderby="date">
                                        创建日期
                                        @if (Model.OrderBy == "date")
                                        {
                                            if (Model.Sort == "asc")
                                            {
                                                <i class="iconfont icon-order-up"></i>
                                            }
                                            else
                                            {
                                                <i class="iconfont icon-order-down"></i>
                                            }
                                        }
                                        else
                                        {
                                            <i class="iconfont icon-orderby"></i>
                                        }
                                    </a>
                                </th>
                                
                                <th>
                                    <a asp-action="Index" asp-route-keyword="@Model.Keyword" asp-route-sort="@((Model.OrderBy=="username" && Model.Sort=="asc")?"desc":"asc")" asp-route-orderby="username">
                                        用户名
                                        @if (Model.OrderBy == "username")
                                        {
                                            if (Model.Sort == "asc")
                                            {
                                                <i class="iconfont icon-order-up"></i>
                                            }
                                            else
                                            {
                                                <i class="iconfont icon-order-down"></i>
                                            }
                                        }
                                        else
                                        {
                                            <i class="iconfont icon-orderby"></i>
                                        }

                                    </a>
                                </th>
                                <th>
                                    IP
                                </th>
                                
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="tbList">
                            @foreach (var item in Model.Logs)
                            {
                                <tr id="@(item.Id)tr">
                                    <td><input type="checkbox" value="@item.Id" class="itemSelect" /></td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Message)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TimeStamp)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.UserName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.IP)
                                    </td>
                                
                                    <td>
                                        
                                        @* <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info btn-sm"><i class="iconfont icon-info-circle"></i></a> *@
                                        @* <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm btn-delete" title="删除"><i class="iconfont icon-delete"></i></a> *@
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card-footer">

                <div class="row align-items-center">
                    <div class="col">
                        <button type="button" class="btn btn-danger btn-sm" id="btn-delete-multi"><i class="iconfont icon-delete"></i> 删除</button>
                    </div>
                    <div class="col-auto">

                        @Html.PagedListPager(Model.Logs, page => Url.Action("Index", new { page = page, keyword = Model.Keyword, sort = Model.Sort, orderby = Model.OrderBy }), new PagedListRenderOptions
                          {
                              LiElementClasses = new string[] { "page-item" },
                              PageClasses = new string[] { "page-link" }
                          })
                    </div>
                    <div class="col-auto">
                        总记录<strong>@Model.TotalCount</strong>条
                    </div>
                    @* <div class="col-auto"> *@
                    @*     <select asp-for="@Model.PageSize" asp-items="(SelectList)ViewBag.PageSizes" class="form-control" style="min-width:60px;"> *@
                    @*     </select> *@
                    @* </div> *@
                </div>
            </div>
        </div>







@section header{

}

@section footer{
    <script>
        document.getElementById('allSelect').onclick = function() {

             selectAllPages(this.checked);
        };

        function selectAllPages(isChecked) {
            // get reference to element containing toppings checkboxes
            var el = document.getElementById('tbList');
            var tops = el.getElementsByTagName('input');

            for (var i=0, len=tops.length; i<len; i++) {
                if (tops[i].type === 'checkbox' && tops[i].disabled == false) {
                    //tops[i].onclick = updateTotal;
                    tops[i].checked = isChecked;
                }
            }
        }

        var antiforgeryToken = @Json.Serialize(antiforgeryRequestToken);
        
        let btnDeleteAll = document.getElementById('btnDeleteAll');
        btnDeleteAll.addEventListener("click",(e) =>{
            let url = "@Url.Action("DeleteAll")";
            fetch(url, {
                method: 'DELETE',
                headers:{
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': antiforgeryToken
                    }
            }).then(res=>res.json())
            .then(response => {
                if (response.status === 1) {
                   toastr.success(response.message);
                   setTimeout(function (){
                        location.reload();
                   },1000);     

                }
                if (response.status === 2) {
                    toastr.error(response.message);
                }
                if (response.status === 4) {
                   toastr.warning(response.message);
                }      
            })
            .catch(error => {
                toastr.error(error);
            });            
        })
        
        

        $("#btn-delete-multi").click(function (e) {
            e.preventDefault();      

            var ids = [];
            var el = document.getElementById('tbList');
            var tops = el.getElementsByClassName('itemSelect');

            for (var i = 0, len = tops.length; i < len; i++) {
                if (tops[i].checked === true) {
                    ids.push(tops[i].value);
                }
            }
            console.log(ids);
            if (ids.length === 0) {
                swal("删除页面", "请选择要删除的页面!", "error");             
            } else {
                //to doing

                var url = "@Url.Action("DeleteMulti")";

                swal({
                title: "您确定要删除此项？",
                text: "此删除操作不可恢复！",
                icon: "warning",
                buttons: ["取消", "确定"],
                dangerMode: true
            })
                .then((willDelete) => {
                    if (willDelete) {

                        $.ajax({
                            url: url,
                            type: "DELETE",
                            data:{ ids: ids },
                            headers: { 'RequestVerificationToken': antiforgeryToken },
                            success: function (data) {

                                if (data.status === 1) {
                                    toastr.success(data.message);
                                    //location.reload();
                                  for (var i = 0, len = ids.length; i < len; i++) {                                      
                                      $("#" + ids[i] + "tr").remove();
                                    }

                                }
                                if (data.status === 2) {
                                    toastr.error(data.message);
                                }
                            },
                            error: function (xhr, status, error) {
                                toastr.error(error);
                            }
                        });

                    } else {
                        //swal("Your imaginary file is safe!");
                    }
                });


            }
        });


        //单个删除
        $(".btn-delete").click(function (e) {
            e.preventDefault();
            var url = $(this).attr("href");
            var item = $(this).closest("tr");


            swal({
                title: "您确定要删除此项？",
                text: "此删除操作不可恢复！",
                icon: "warning",
                buttons: ["取消", "确定"],
                dangerMode: true
            })
                .then((willDelete) => {
                    if (willDelete) {

                        $.ajax({
                            url: url,
                            type: "DELETE",
                            headers: { 'RequestVerificationToken': antiforgeryToken },
                            success: function (data) {

                                if (data.status === 1) {
                                    toastr.success(data.message);
                                    item.remove();

                                }
                                if (data.status === 2) {
                                    toastr.error(data.message);
                                }
                            },
                            error: function (xhr, status, error) {
                                toastr.error(error);
                            }
                        });

                    } else {
                        //swal("Your imaginary file is safe!");
                    }
                });


        });

        $(function () {         

          $(document).on("change", '#PageSize', function (e) {
                e.preventDefault();

                var url = "@Url.Action("PageSizeSet")", title = "分页设置", pageSize = $(this).val();
                Common.PageSizeSet(url, title, pageSize, setPageSizeFunc);

          });

            function setPageSizeFunc() {
                location.reload();
            }
        })
    </script>
}